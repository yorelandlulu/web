<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kun.flow.data.OperaterMapper">
	<resultMap id="OperaterResultMap" type="com.kun.flow.model.Operater">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element 
			was generated on Thu Apr 24 22:29:03 CST 2014. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="superUser" property="superUser" jdbcType="INTEGER" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="operaterId" property="operaterId" jdbcType="BIGINT" />
		<result column="operaterCode" property="operaterCode" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<!-- ======================================================== -->
	<!-- hibernate-oracle分页的处理方式 -->
	<!-- select * from ( select row_.*, rownum rownum_ from ( select * from table ) row_ where rownum <= ? ) where rownum_ > 
		? -->

	<!-- 增加 -->
	<insert id="save" parameterType="com.kun.flow.model.Operater" useGeneratedKeys="true" keyProperty="object.id">
		<if test="object.name != null and object.name != ''">
			insert into operater (
			type, code, name, password, superUser, email, phone, createTime,
			updateTime,operaterId,operaterCode,status
			)
			values (#{object.type}, #{object.code}, #{object.name}, #{object.password},
			#{object.superUser}, #{object.email},
			#{object.phone}, #{object.createTime}, #{object.updateTime},
			#{object.operaterId}, #{object.operaterCode}, #{object.status})
		</if>
	</insert>
	<!-- 修改 -->
	<update id="update" parameterType="com.kun.flow.model.Operater">
		<if test="object.id != null and object.name != null and object.name != ''">
			update operater set password =
			#{object.password},
            name = #{object.name},
            createTime = #{object.createTime},
			updateTime = #{object.updateTime},
			status = #{object.status}
			where id=#{object.id}
		</if>
	</update>
	<!-- 删除 -->
	<delete id="delete" parameterType="com.kun.flow.model.Operater">
		<if test="object.id != null">
			delete from operater where id=#{object.id}
		</if>
	</delete>
	<delete id="deleteAll">
		delete from operater
	</delete>
	<delete id="deleteByKey" parameterType="java.io.Serializable">
		<if test="key != null">
			delete from operater where id=#{key}
		</if>
	</delete>
	<!-- 查询 -->
	<select id="getByKey" resultMap="OperaterResultMap" parameterType="java.io.Serializable">
		<if test="key != null">
			select
			<include refid="Operater_Columns" />
			from operater where id = #{key}
		</if>
	</select>
	<select id="getOneByNameOrCode" resultMap="OperaterResultMap" parameterType="com.kun.flow.model.Operater">
		<if test="(object.code != null  and object.code != '') or (object.name != null and object.name != '')">
			select
			<include refid="Operater_Columns" />
			from operater
			<!-- <if test="id != null"> -->
			<!-- id != #{id} and -->
			<!-- </if> -->
			<trim prefix="where" suffixOverrides="or">
				<if test="object.code != null and object.code != ''">
					code = #{object.code} or
				</if>
				<if test="object.name != null and object.name != ''">
					name = #{object.name} or
				</if>
			</trim>
		</if>
	</select>
	<select id="findByExample" resultMap="OperaterResultMap" parameterType="com.kun.flow.model.Operater">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
		<include refid="Common_Where_Fragment" />
	</select>
	<select id="findOnePageByExample" resultMap="OperaterResultMap" parameterType="map">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
		<include refid="Common_Where_Fragment" />
	</select>
	<select id="getCountByExample" resultType="int" parameterType="com.kun.flow.model.Operater">
		select count(*) from operater
		<include refid="Common_Where_Fragment" />
	</select>
	<select id="findOneByExample" resultMap="OperaterResultMap" parameterType="com.kun.flow.model.Operater">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
		<include refid="Common_Where_Fragment" />
	</select>
	<select id="loadAll" resultMap="OperaterResultMap" parameterType="com.kun.flow.model.Operater">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
	</select>
	<select id="loadOnePage" resultMap="OperaterResultMap" parameterType="com.kun.flow.bean.Pagination">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
	</select>
	<select id="getCount" resultType="int">
		select count(*) from operater
	</select>
	<select id="search" resultMap="OperaterResultMap" parameterType="map">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
		<include refid="Search_Where_Fragment" />
	</select>
	<select id="getCountForSearch" resultType="int" parameterType="com.kun.flow.model.Operater">
		select count(*) from operater
		<include refid="Search_Where_Fragment" />
	</select>

	<sql id="Operater_Columns">
		id, type, code, name, password, superUser, email, phone, createTime,
		updateTime,operaterId,operaterCode,status
	</sql>

	<sql id="Common_Where_Fragment">
		<trim prefix="where" suffixOverrides="and">
			<include refid="Common_Fragment" />
			<if test="object.code != null and object.code != ''">
				code = #{object.code} and
			</if>
			<if test="object.name != null and object.name != ''">
				name = #{object.name} and
			</if>
			<if test="object.email != null and object.email != ''">
				email = #{object.email} and
			</if>
			<if test="object.phone != null and object.phone != ''">
				phone = #{object.phone} and
			</if>
			<if test="object.operaterCode != null and object.operaterCode != ''">
				operaterCode = #{object.operaterCode} and
			</if>
		</trim>
	</sql>

	<sql id="Search_Where_Fragment">
		<trim prefix="where" suffixOverrides="and">
			<include refid="Common_Fragment" />
			<if test="object.code != null and object.code != ''">
				<bind name="objCode" value="'%'+object.getCode()+'%'" />
				code like #{objCode} and
			</if>
			<if test="object.name != null and object.name != ''">
				<bind name="objName" value="'%'+object.getName()+'%'" />
				name like #{objName} and
			</if>
			<if test="object.email != null and object.email != ''">
				<bind name="objEmail" value="'%'+object.getEmail()+'%'" />
				email like #{objEmail} and
			</if>
			<if test="object.phone != null and object.phone != ''">
				<bind name="objPhone" value="'%'+object.getPhone()+'%'" />
				phone like #{objPhone} and
			</if>
			<if test="object.operaterCode != null and object.operaterCode != ''">
				<bind name="objOperaterCode" value="'%'object.getOperaterCode()+'%'" />
				operaterCode like #{objOperaterCode} and
			</if>
		</trim>
	</sql>
	<sql id="Common_Fragment">
		<if test="object.type != null">
			type = #{object.type} and
		</if>
		<if test="object.superUser != null">
			superUser = #{object.superUser} and
		</if>
		<if test="object.createTime != null">
			createTime = #{object.createTime} and
		</if>
		<if test="object.updateTime != null">
			updateTime = #{object.updateTime} and
		</if>
		<if test="object.status != null">
			status = #{object.status} and
		</if>
	</sql>
	<!-- ======================================================== -->
</mapper>